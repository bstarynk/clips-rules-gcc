   /*******************************************************/
   /*      "C" Language Integrated Production System      */
   /*                                                     */
   /*             CLIPS Version 6.40  07/17/18            */
   /*                                                     */
   /*          MISCELLANEOUS FUNCTIONS HEADER FILE        */
   /*******************************************************/

/*************************************************************/
/* Purpose:                                                  */
/*                                                           */
/* Principal Programmer(s):                                  */
/*      Gary D. Riley                                        */
/*                                                           */
/* Contributing Programmer(s):                               */
/*                                                           */
/* Revision History:                                         */
/*                                                           */
/*      6.23: Correction for FalseSymbol/TrueSymbol. DR0859  */
/*                                                           */
/*            Corrected compilation errors for files         */
/*            generated by constructs-to-c. DR0861           */
/*                                                           */
/*            Changed name of variable exp to theExp         */
/*            because of Unix compiler warnings of shadowed  */
/*            definitions.                                   */
/*                                                           */
/*      6.24: Removed CONFLICT_RESOLUTION_STRATEGIES,        */
/*            DYNAMIC_SALIENCE, INCREMENTAL_RESET,           */
/*            LOGICAL_DEPENDENCIES, IMPERATIVE_METHODS       */
/*            INSTANCE_PATTERN_MATCHING,                     */
/*            IMPERATIVE_MESSAGE_HANDLERS, and               */
/*            AUXILIARY_MESSAGE_HANDLERS compilation flags.  */
/*                                                           */
/*            Renamed BOOLEAN macro type to intBool.         */
/*                                                           */
/*      6.30: Support for long long integers.                */
/*                                                           */
/*            Used CL_gensprintf instead of sprintf.            */
/*                                                           */
/*            Removed conditional code for unsupported       */
/*            compilers/operating systems.                   */
/*                                                           */
/*            Renamed EX_MATH compiler flag to               */
/*            EXTENDED_MATH_FUNCTIONS.                       */
/*                                                           */
/*            Combined BASIC_IO and EXT_IO compilation       */
/*            flags into the IO_FUNCTIONS compilation flag.  */
/*                                                           */
/*            Removed code associated with HELP_FUNCTIONS    */
/*            and EMACS_EDITOR compiler flags.               */
/*                                                           */
/*            Added operating-system function.               */
/*                                                           */
/*            Added new function (for future use).           */
/*                                                           */
/*            Added const qualifiers to remove C++           */
/*            deprecation warnings.                          */
/*                                                           */
/*      6.31: Added local-time and gm-time functions.        */
/*                                                           */
/*      6.40: Refactored code to reduce header dependencies  */
/*            in sysdep.c.                                   */
/*                                                           */
/*            Removed LOCALE definition.                     */
/*                                                           */
/*            Pragma once and other inclusion changes.       */
/*                                                           */
/*            Added support for booleans with <stdbool.h>.   */
/*                                                           */
/*            Removed use of void pointers for specific      */
/*            data structures.                               */
/*                                                           */
/*            UDF redesign.                                  */
/*                                                           */
/*            Added get-error, set-error, and clear-error    */
/*            functions.                                     */
/*                                                           */
/*************************************************************/

#ifndef _H_miscfun

#pragma once

#define _H_miscfun

   void                           CL_MiscFunctionDefinitions(Environment *);
   void                           CL_ExitCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_CreateFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_SetgenFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_GensymFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_GensymStarFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_RandomFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_SeedFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_LengthFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_ConserveMemCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_ReleaseMemCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_MemUsedCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_MemRequestsCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_OptionsCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_OperatingSystemFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_ExpandFuncCall(Environment *,UDFContext *,UDFValue *);
   void                           CL_DummyExpandFuncMultifield(Environment *,UDFContext *,UDFValue *);
   void                           CL_CauseCL_EvaluationError(Environment *,UDFContext *,UDFValue *);
   void                           CL_SetSORCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_GetSORCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_GetFunctionRestrictions(Environment *,UDFContext *,UDFValue *);
   void                           CL_AproposCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_GensymStar(Environment *,UDFValue *);
   void                           CL_GetFunctionListFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_FuncallFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_NewFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_CallFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_TimerFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_TimeFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_SystemCommand(Environment *,UDFContext *,UDFValue *);
   void                           CL_LocalCL_TimeFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_GMCL_TimeFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_GetErrorFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_ClearErrorValue(Environment *);
   void                           CL_ClearErrorFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_SetErrorFunction(Environment *,UDFContext *,UDFValue *);
   void                           CL_SetErrorValue(Environment *,TypeHeader *);
   void                           CL_VoidFunction(Environment *,UDFContext *,UDFValue *);

#endif /* _H_miscfun */






